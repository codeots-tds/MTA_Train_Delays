version: "3.7"

services:
  app:
    build:
      context: . # This points to the root of your project.
      dockerfile: ./dockerfile # Specify the location of the Dockerfile.
    volumes:
      - ./app:/app #mounts the app directory on your local directory to your desired path in the container.
    environment:
      DB_HOST : ${DB_HOST}
      DB_USER : ${DB_USER}
      DB_NAME : ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
    ports:
      - 80:80
    networks:
      - mta-network
    depends_on:
      - mta_db_host

  mta_db_host:
    image: postgres:latest
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $DB_USER"]
      interval: 30s
      timeout: 30s
      retries: 3
    environment:
        POSTGRES_DB: ${DB_NAME}
        POSTGRES_USER: ${DB_USER}
        POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - mta_db_data:/var/lib/postgresql/data
      # - ./app/station_data_db:/pyscripts
      - ./station_data_db:/pyscripts
      - ./data:/mta_data
      - ./.env:/pyscripts/.env
    networks:
      - mta-network

    # command: python /pyscripts/load_station_data_to_db.py
  
  airflow:
    build:
      context: . #is a set of files and directories that are made available to the build process. sets context to root directory. 
      dockerfile: ./airflow/dockerfile #this is for where your dockerfile is located for airflow
    ports:
      - 8080:8080
    networks:
      - mta-network
    env_file:
      - ./.env
    environment:
      # - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_NAME
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://$DB_USER:$DB_PASSWORD@$DB_HOST:5432/$DB_NAME
    volumes:
      - ./app:/app #reflects the app project directory inside the app services container
      - ./airflow/airflow_home/dags:/opt/airflow/dags
    depends_on:
      - mta_db_host
volumes:
  mta_db_data:

networks:
  mta-network:
